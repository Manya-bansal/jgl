////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////// JGL MAIN LIBRARY //////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

// Functions that have yet to be converted are in jlg.lib.old.js

////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// TIMING ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

let prev_tick = {};

/**
 * Get the elapsed time since the last call to this function (in ms).
 * @param {String} type is a string to let you track calls to elapsed()
 */
function elapsed(type) {
	// Returns time since the last call to elapsed
	if (type==undefined) {
		type = 'null';
	}
	let n = now();
	prev_tick[type] = n;
	return now()-prev_tick[type];
}

/**
 * Get the current time (in ms).
 */
function now() {
	return performance.now();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////// ARRAY HELPER FUNCS ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Get the current time (in ms).
 */
function any(array1,array2) {
	if (typeof array2 == 'number') {return any(array1,array2);}
	// Checks if any values are equal
	for (var i=0;i<array1.length;i++) {
		for (var j=0;j<array2.length;j++) {
			if (array1[i]==array2[j]) {return true;}
		}
	}
	return false;
}

function any_(array1,value) {
	// Checks if any values are equal
	for (var i=0;i<array1.length;i++) {
		if (value==array1[i]) {return true;}
	}
	return false;
}

